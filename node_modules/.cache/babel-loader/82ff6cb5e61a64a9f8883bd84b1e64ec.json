{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mac/SolanaHackathon/solana/src/Pages/03_LearnAboutRent.js\",\n    _s = $RefreshSig$();\n\nimport { useRouteMatch } from \"react-router\";\nimport * as BufferLayout from \"buffer-layout\";\nimport { useState, useEffect } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { connectToSolana } from \"../consts/consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LearnAboutRent = () => {\n  _s();\n\n  const [newState, setNewState] = useState(null);\n  const route = useRouteMatch();\n  useEffect(() => {\n    const getNewAccount = async () => {\n      const account = await new PublicKey(\"DoFxSedewimW1j8wz1LDhNUsqWs97aytqXkhFj8WBz8H\");\n      setNewState(account);\n    };\n\n    getNewAccount();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Learn About Rent!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Rent is a concept that is unique to Proof of Stakes crypto. Solana uses rent to ensure that validators don't have to spend to resources keeping track of very small accounts every epoch. Rent, while annoying and easy to misunderstand, is one of the reasons Solana can go fast under current hardware limitations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Currently, for wallets, the amount needed for rent exemption is small. Under 0.002 solana. However, for programs, rent can be incredibly expensive! Let's build our first program together and see how much rent we need!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Rent is calculated by taking the total byte size of an account and then multiplying it by the amount of lamports needed to pay it. Every epoch, rent is deducted until the account no is unavailable. As of Solana 1.6, to be rent exempt, a person must have 24 times the amount of rent cost per byte.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/create-a-custom-program`,\n      children: \"Go Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LearnAboutRent, \"gOVnELfzckovSVJlOC68KffpxmY=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = LearnAboutRent;\nexport default LearnAboutRent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LearnAboutRent\");","map":{"version":3,"sources":["/Users/mr.mac/SolanaHackathon/solana/src/Pages/03_LearnAboutRent.js"],"names":["useRouteMatch","BufferLayout","useState","useEffect","PublicKey","connectToSolana","LearnAboutRent","newState","setNewState","route","getNewAccount","account"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,OAAO,KAAKC,YAAZ,MAA8B,eAA9B;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMO,KAAK,GAAGT,aAAa,EAA3B;AACAG,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,aAAa,GAAG,YAAY;AAChC,YAAMC,OAAO,GAAG,MAAM,IAAIP,SAAJ,CACpB,8CADoB,CAAtB;AAIAI,MAAAA,WAAW,CAACG,OAAD,CAAX;AACD,KAND;;AAQAD,IAAAA,aAAa;AACd,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eAyBE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,0BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA5CD;;GAAMJ,c;UAEUN,a;;;KAFVM,c;AA8CN,eAAeA,cAAf","sourcesContent":["import { useRouteMatch } from \"react-router\";\n\nimport * as BufferLayout from \"buffer-layout\";\n\nimport { useState, useEffect } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { connectToSolana } from \"../consts/consts\";\n\nconst LearnAboutRent = () => {\n  const [newState, setNewState] = useState(null);\n  const route = useRouteMatch();\n  useEffect(() => {\n    const getNewAccount = async () => {\n      const account = await new PublicKey(\n        \"DoFxSedewimW1j8wz1LDhNUsqWs97aytqXkhFj8WBz8H\",\n      );\n\n      setNewState(account);\n    };\n\n    getNewAccount();\n  }, []);\n\n  return (\n    <div>\n      <h1>Learn About Rent!</h1>\n      <div>\n        Rent is a concept that is unique to Proof of Stakes crypto. Solana uses\n        rent to ensure that validators don't have to spend to resources keeping\n        track of very small accounts every epoch. Rent, while annoying and easy\n        to misunderstand, is one of the reasons Solana can go fast under current\n        hardware limitations.\n      </div>\n\n      <div>\n        Currently, for wallets, the amount needed for rent exemption is small.\n        Under 0.002 solana. However, for programs, rent can be incredibly\n        expensive! Let's build our first program together and see how much rent\n        we need!\n      </div>\n\n      <div>\n        Rent is calculated by taking the total byte size of an account and then\n        multiplying it by the amount of lamports needed to pay it. Every epoch,\n        rent is deducted until the account no is unavailable. As of Solana 1.6,\n        to be rent exempt, a person must have 24 times the amount of rent cost\n        per byte.\n      </div>\n\n      <Link to={`/create-a-custom-program`}>Go Next</Link>\n    </div>\n  );\n};\n\nexport default LearnAboutRent;\n"]},"metadata":{},"sourceType":"module"}