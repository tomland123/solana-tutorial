{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mac/SolanaHackathon/solana/src/Pages/02_SendTransactions.js\",\n    _s = $RefreshSig$();\n\nimport { Explanation, ExplanationText, Title } from \"../Components/Explanation\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport fetchAllAcountInfo from \"../utils/fetchAllAccountInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendTransaction = ({\n  accountList,\n  connection\n}) => {\n  _s();\n\n  const [transaction, setTransactions] = useState(false);\n  const [goToNextPage, setNextPage] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  const sendTransactions = async e => {\n    console.log(e);\n  };\n\n  useEffect(() => {\n    const getNewAccount = async () => {\n      const account = await new PublicKey(\"DoFxSedewimW1j8wz1LDhNUsqWs97aytqXkhFj8WBz8H\");\n\n      if (connection) {\n        const accountDetail = await fetchAllAcountInfo(account, connection);\n        setTransactions(accountDetail);\n      }\n    };\n\n    getNewAccount();\n  }, [connection]);\n\n  const transactAndAllowNextPage = () => {\n    console.log(transaction);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Explanation, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Let's try sending a transaction now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExplanationText, {\n        children: \"Being able to send and receive a transaction is really important. To do this, you need the reciever wallet, and the send wallet. This page has two generated accounts. If you want to check the transaction, you can see a list of all transactions here:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"AS you can see there is a transaction fee associated with your transaction.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountCard, {\n      account: accountList === null || accountList === void 0 ? void 0 : accountList[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountCard, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getValue,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/learn-rent`,\n      className: !accountList.length ? \"disabled\" : null,\n      children: \"Go Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SendTransaction, \"ZD+ZDz5nLtRxKQt+H1BmiPHJ5l4=\");\n\n_c = SendTransaction;\nexport default SendTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendTransaction\");","map":{"version":3,"sources":["/Users/mr.mac/SolanaHackathon/solana/src/Pages/02_SendTransactions.js"],"names":["Explanation","ExplanationText","Title","BrowserRouter","Router","Switch","Route","Link","useEffect","useState","PublicKey","fetchAllAcountInfo","SendTransaction","accountList","connection","transaction","setTransactions","goToNextPage","setNextPage","loading","setLoading","value","setValue","sendTransactions","e","console","log","getNewAccount","account","accountDetail","transactAndAllowNextPage","getValue","target","length"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,KAAvC,QAAoD,2BAApD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAiC;AAAA;;AACvD,QAAM,CAACC,WAAD,EAAcC,eAAd,IAAiCP,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM,CAACQ,YAAD,EAAeC,WAAf,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMc,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,aAAa,GAAG,YAAY;AAChC,YAAMC,OAAO,GAAG,MAAM,IAAIlB,SAAJ,CACpB,8CADoB,CAAtB;;AAIA,UAAII,UAAJ,EAAgB;AACd,cAAMe,aAAa,GAAG,MAAMlB,kBAAkB,CAACiB,OAAD,EAAUd,UAAV,CAA9C;AAEAE,QAAAA,eAAe,CAACa,aAAD,CAAf;AACD;AACF,KAVD;;AAYAF,IAAAA,aAAa;AACd,GAdQ,EAcN,CAACb,UAAD,CAdM,CAAT;;AAgBA,QAAMgB,wBAAwB,GAAG,MAAM;AACrCL,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAgBE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEF,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAG,CAAH;AAAjC;AAAA;AAAA;AAAA;AAAA,YAhBF,eAkBE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEe;AAAtB;AAAA;AAAA;AAAA;AAAA,YAlBF,eAoBE;AAAM,MAAA,QAAQ,EAAEG,QAAhB;AAAA,8BACE;AACE,QAAA,QAAQ,EAAGP,CAAD,IAAO;AACfF,UAAAA,QAAQ,CAACE,CAAC,CAACQ,MAAF,CAASX,KAAV,CAAR;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eA6BE,QAAC,IAAD;AACE,MAAA,EAAE,EAAG,aADP;AAEE,MAAA,SAAS,EAAE,CAACR,WAAW,CAACoB,MAAb,GAAsB,UAAtB,GAAmC,IAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CArED;;GAAMrB,e;;KAAAA,e;AAuEN,eAAeA,eAAf","sourcesContent":["import { Explanation, ExplanationText, Title } from \"../Components/Explanation\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport fetchAllAcountInfo from \"../utils/fetchAllAccountInfo\";\n\nconst SendTransaction = ({ accountList, connection }) => {\n  const [transaction, setTransactions] = useState(false);\n  const [goToNextPage, setNextPage] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const [value, setValue] = useState(\"\");\n\n  const sendTransactions = async (e) => {\n    console.log(e);\n  };\n\n  useEffect(() => {\n    const getNewAccount = async () => {\n      const account = await new PublicKey(\n        \"DoFxSedewimW1j8wz1LDhNUsqWs97aytqXkhFj8WBz8H\",\n      );\n\n      if (connection) {\n        const accountDetail = await fetchAllAcountInfo(account, connection);\n\n        setTransactions(accountDetail);\n      }\n    };\n\n    getNewAccount();\n  }, [connection]);\n\n  const transactAndAllowNextPage = () => {\n    console.log(transaction);\n  };\n\n  return (\n    <div>\n      <Explanation>\n        <Title>Let's try sending a transaction now!</Title>\n        <ExplanationText>\n          Being able to send and receive a transaction is really important. To\n          do this, you need the reciever wallet, and the send wallet. This page\n          has two generated accounts. If you want to check the transaction, you\n          can see a list of all transactions here:\n        </ExplanationText>\n      </Explanation>\n\n      <div>\n        AS you can see there is a transaction fee associated with your\n        transaction.\n      </div>\n\n      <AccountCard account={accountList?.[0]} />\n\n      <AccountCard account={account} />\n\n      <form onSubmit={getValue}>\n        <input\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n        ></input>\n        <button type=\"submit\"></button>\n      </form>\n\n      <Link\n        to={`/learn-rent`}\n        className={!accountList.length ? \"disabled\" : null}\n      >\n        Go Next\n      </Link>\n    </div>\n  );\n};\n\nexport default SendTransaction;\n"]},"metadata":{},"sourceType":"module"}