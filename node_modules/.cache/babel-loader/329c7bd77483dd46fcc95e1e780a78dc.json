{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mac/SolanaHackathon/solana/src/Pages/03_LearnAboutRent.js\",\n    _s = $RefreshSig$();\n\nimport { useRouteMatch } from \"react-router\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LearnAboutRent = () => {\n  _s();\n\n  const [newState, setNewState] = useState(null);\n  const route = useRouteMatch();\n  useEffect(() => {\n    const getNewAccount = async () => {\n      debugger;\n      const account = await createAccount();\n      console.log(account, \"account\");\n      const lol = account.getAccountInfo(account.publicKey);\n      console.log(lol);\n      setNewState(account);\n    };\n\n    getNewAccount();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Learn About Rent!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Rent is a concept that is unique to Proof of Stakes crypto. Solana uses rent to ensure that validators don't have to spend to resources keeping track of very small accounts every epoch. Rent, while annoying and easy to misunderstand, is one of the reasons Solana can go fast under current hardware limitations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Rent works by taking the total size of an account and then adding the ... Every epoch, rent is deducted until there is no more. Please note, as Solana grows and changes, the concept of rent and the requirements will also change. As of now, to be rent exempt you need 24 times the amount of space you will be using.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"You can use the command ```getRentExemption``` to see how much you need to send to be rent exempt.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"For the account in this tutorial: You would need \", rentAmount, \" and ...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LearnAboutRent, \"gOVnELfzckovSVJlOC68KffpxmY=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = LearnAboutRent;\nexport default LearnAboutRent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LearnAboutRent\");","map":{"version":3,"sources":["/Users/mr.mac/SolanaHackathon/solana/src/Pages/03_LearnAboutRent.js"],"names":["useRouteMatch","BrowserRouter","Router","Switch","Route","Link","useState","useEffect","LearnAboutRent","newState","setNewState","route","getNewAccount","account","createAccount","console","log","lol","getAccountInfo","publicKey","rentAmount"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMK,KAAK,GAAGX,aAAa,EAA3B;AACAO,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,aAAa,GAAG,YAAY;AAChC;AACA,YAAMC,OAAO,GAAG,MAAMC,aAAa,EAAnC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,SAArB;AACA,YAAMI,GAAG,GAAGJ,OAAO,CAACK,cAAR,CAAuBL,OAAO,CAACM,SAA/B,CAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAP,MAAAA,WAAW,CAACG,OAAD,CAAX;AACD,KAPD;;AASAD,IAAAA,aAAa;AACd,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAuBE;AAAA,sEACoDQ,UADpD;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA7CD;;GAAMZ,c;UAEUR,a;;;KAFVQ,c;AA+CN,eAAeA,cAAf","sourcesContent":["import { useRouteMatch } from \"react-router\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst LearnAboutRent = () => {\n  const [newState, setNewState] = useState(null);\n  const route = useRouteMatch();\n  useEffect(() => {\n    const getNewAccount = async () => {\n      debugger;\n      const account = await createAccount();\n      console.log(account, \"account\");\n      const lol = account.getAccountInfo(account.publicKey);\n      console.log(lol);\n      setNewState(account);\n    };\n\n    getNewAccount();\n  }, []);\n\n  return (\n    <div>\n      <h1>Learn About Rent!</h1>\n      <div>\n        Rent is a concept that is unique to Proof of Stakes crypto. Solana uses\n        rent to ensure that validators don't have to spend to resources keeping\n        track of very small accounts every epoch. Rent, while annoying and easy\n        to misunderstand, is one of the reasons Solana can go fast under current\n        hardware limitations.\n      </div>\n\n      <div>\n        Rent works by taking the total size of an account and then adding the\n        ... Every epoch, rent is deducted until there is no more. Please note,\n        as Solana grows and changes, the concept of rent and the requirements\n        will also change. As of now, to be rent exempt you need 24 times the\n        amount of space you will be using.\n      </div>\n\n      <div>\n        You can use the command ```getRentExemption``` to see how much you need\n        to send to be rent exempt.\n      </div>\n\n      <div>\n        For the account in this tutorial: You would need {rentAmount} and ...\n      </div>\n    </div>\n  );\n};\n\nexport default LearnAboutRent;\n"]},"metadata":{},"sourceType":"module"}