{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mac/SolanaHackathon/solana/src/Components/Ripple.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useLayoutEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RippleContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  span {\n    transform: scale(0);\n    border-radius: 100%;\n    position: absolute;\n    opacity: 0.75;\n    background-color: ${props => props.color};\n    animation-name: ripple;\n    animation-duration: ${props => props.duration}ms;\n  }\n\n  @keyframes ripple {\n    to {\n      opacity: 0;\n      transform: scale(2);\n    }\n  }\n`;\n_c = RippleContainer;\n\nconst useDebouncedRippleCleanUp = (rippleCount, duration, cleanUpFunction) => {\n  _s();\n\n  useLayoutEffect(() => {\n    let bounce = null;\n\n    if (rippleCount > 0) {\n      clearTimeout(bounce);\n      bounce = setTimeout(() => {\n        cleanUpFunction();\n        clearTimeout(bounce);\n      }, duration * 4);\n    }\n\n    return () => clearTimeout(bounce);\n  }, [rippleCount, duration, cleanUpFunction]);\n};\n\n_s(useDebouncedRippleCleanUp, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n\nconst Ripple = ({\n  duration = 850,\n  color = \"#fff\",\n  ...rest\n}) => {\n  _s2();\n\n  const [rippleArray, setRippleArray] = useState([]);\n  useDebouncedRippleCleanUp(rippleArray.length, duration, () => {\n    setRippleArray([]);\n  });\n\n  const addRipple = event => {\n    const rippleContainer = event.currentTarget.getBoundingClientRect();\n    console.log(event.pageX, rippleContainer);\n    const size = rippleContainer.width > rippleContainer.height ? rippleContainer.width : rippleContainer.height;\n    const x = event.pageX - rippleContainer.x - size / 2;\n    const y = event.pageY - rippleContainer.y - size / 2;\n    const newRipple = {\n      x,\n      y,\n      size\n    };\n    setRippleArray([...rippleArray, newRipple]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(RippleContainer, {\n    duration: duration,\n    color: color,\n    onMouseDown: addRipple,\n    children: rippleArray.length > 0 && rippleArray.map((ripple, index) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          top: ripple.y,\n          left: ripple.x,\n          width: ripple.size,\n          height: ripple.size\n        }\n      }, \"span\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Ripple, \"GDU8SRQccAPw+1mD6gkaAvSOwVI=\", false, function () {\n  return [useDebouncedRippleCleanUp];\n});\n\n_c2 = Ripple;\nRipple.propTypes = {\n  duration: PropTypes.number,\n  color: PropTypes.string\n};\nexport default Ripple;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RippleContainer\");\n$RefreshReg$(_c2, \"Ripple\");","map":{"version":3,"sources":["/Users/mr.mac/SolanaHackathon/solana/src/Components/Ripple.js"],"names":["React","useState","useLayoutEffect","styled","PropTypes","RippleContainer","div","props","color","duration","useDebouncedRippleCleanUp","rippleCount","cleanUpFunction","bounce","clearTimeout","setTimeout","Ripple","rest","rippleArray","setRippleArray","length","addRipple","event","rippleContainer","currentTarget","getBoundingClientRect","console","log","pageX","size","width","height","x","y","pageY","newRipple","map","ripple","index","top","left","propTypes","number","string"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst RippleContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  span {\n    transform: scale(0);\n    border-radius: 100%;\n    position: absolute;\n    opacity: 0.75;\n    background-color: ${(props) => props.color};\n    animation-name: ripple;\n    animation-duration: ${(props) => props.duration}ms;\n  }\n\n  @keyframes ripple {\n    to {\n      opacity: 0;\n      transform: scale(2);\n    }\n  }\n`;\n\nconst useDebouncedRippleCleanUp = (rippleCount, duration, cleanUpFunction) => {\n  useLayoutEffect(() => {\n    let bounce = null;\n    if (rippleCount > 0) {\n      clearTimeout(bounce);\n\n      bounce = setTimeout(() => {\n        cleanUpFunction();\n        clearTimeout(bounce);\n      }, duration * 4);\n    }\n\n    return () => clearTimeout(bounce);\n  }, [rippleCount, duration, cleanUpFunction]);\n};\n\nconst Ripple = ({ duration = 850, color = \"#fff\", ...rest }) => {\n  const [rippleArray, setRippleArray] = useState([]);\n\n  useDebouncedRippleCleanUp(rippleArray.length, duration, () => {\n    setRippleArray([]);\n  });\n\n  const addRipple = (event) => {\n    const rippleContainer = event.currentTarget.getBoundingClientRect();\n    console.log(event.pageX, rippleContainer);\n    const size =\n      rippleContainer.width > rippleContainer.height\n        ? rippleContainer.width\n        : rippleContainer.height;\n    const x = event.pageX - rippleContainer.x - size / 2;\n    const y = event.pageY - rippleContainer.y - size / 2;\n    const newRipple = {\n      x,\n      y,\n      size,\n    };\n\n    setRippleArray([...rippleArray, newRipple]);\n  };\n\n  return (\n    <RippleContainer duration={duration} color={color} onMouseDown={addRipple}>\n      {rippleArray.length > 0 &&\n        rippleArray.map((ripple, index) => {\n          return (\n            <span\n              key={\"span\" + index}\n              style={{\n                top: ripple.y,\n                left: ripple.x,\n                width: ripple.size,\n                height: ripple.size,\n              }}\n            />\n          );\n        })}\n    </RippleContainer>\n  );\n};\n\nRipple.propTypes = {\n  duration: PropTypes.number,\n  color: PropTypes.string,\n};\n\nexport default Ripple;\n"]},"metadata":{},"sourceType":"module"}