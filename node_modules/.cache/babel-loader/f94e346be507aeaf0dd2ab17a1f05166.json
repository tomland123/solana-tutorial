{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mac/SolanaHackathon/solana/src/Pages/02_SendTransactions.js\",\n    _s = $RefreshSig$();\n\nimport { Explanation, ExplanationText, Title } from \"../Components/Explanation\";\nimport { BrowserRouter as Router, useHistory, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Connection, PublicKey } from \"@solana/web3.js\";\nimport fetchAllAcountInfo from \"../utils/fetchAllAccountInfo\";\nimport AccountCard from \"../Components/AccountCard\";\nimport Github from \"../Components/Github\";\nimport { Row, Col, Container } from \"react-grid-system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendTransaction = ({\n  accountList,\n  connection\n}) => {\n  _s();\n\n  const [transaction, setTransactions] = useState(false);\n  const [goToNextPage, setNextPage] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [value, setValue] = useState(\"\");\n\n  const sendTransactions = async e => {\n    setLoading(true);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    const getNewAccount = async () => {\n      const account = await new PublicKey(\"DoFxSedewimW1j8wz1LDhNUsqWs97aytqXkhFj8WBz8H\");\n\n      if (connection) {\n        var _accountList$, _accountList$2, _accountList$3;\n\n        setLoading(true);\n        const secondAccount = await new PublicKey(accountList === null || accountList === void 0 ? void 0 : (_accountList$ = accountList[0]) === null || _accountList$ === void 0 ? void 0 : _accountList$.publicKey.toString());\n        const accountDetailOne = await fetchAllAcountInfo((accountList === null || accountList === void 0 ? void 0 : (_accountList$2 = accountList[0]) === null || _accountList$2 === void 0 ? void 0 : _accountList$2.publicKey) || null, connection);\n        const airDrop = await connection.requestAirdrop(secondAccount, 10000000);\n        console.log(airDrop, \"air drop\");\n        const confirmedTransaction = connection.getConfirmedTransaction(airDrop);\n        const accountDetailTwo = await fetchAllAcountInfo(account, connection);\n        setTransactions([{ ...accountDetailOne,\n          secretKey: accountList === null || accountList === void 0 ? void 0 : (_accountList$3 = accountList[0]) === null || _accountList$3 === void 0 ? void 0 : _accountList$3.secretKey\n        }, accountDetailTwo]);\n        setLoading(false);\n      }\n    };\n\n    getNewAccount();\n  }, [connection]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Explanation, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Let's try sending a transaction now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExplanationText, {\n        children: \"Some money has been airdropped into your account! Being able to send and receive a transaction is really important. To do this, you need the reciever wallet, and the send wallet. This page has two generated accounts. If you want to check the transaction, you can see a list of all transactions here:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 5,\n        children: /*#__PURE__*/_jsxDEV(AccountCard, {\n          account: transaction[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"50%\",\n              margin: \"auto\"\n            },\n            src: \"Arrow_east.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 5,\n        children: /*#__PURE__*/_jsxDEV(AccountCard, {\n          account: transaction[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTransactions,\n        children: \"Send coins to new account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/success`,\n      className: !accountList.length ? \"disabled\" : null,\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Github, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SendTransaction, \"iJUYORjeq89bO/cP+w9QeWnsMbc=\", false, function () {\n  return [useHistory];\n});\n\n_c = SendTransaction;\nexport default SendTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendTransaction\");","map":{"version":3,"sources":["/Users/mr.mac/SolanaHackathon/solana/src/Pages/02_SendTransactions.js"],"names":["Explanation","ExplanationText","Title","BrowserRouter","Router","useHistory","Link","useEffect","useState","Connection","PublicKey","fetchAllAcountInfo","AccountCard","Github","Row","Col","Container","SendTransaction","accountList","connection","transaction","setTransactions","goToNextPage","setNextPage","loading","setLoading","history","value","setValue","sendTransactions","e","getNewAccount","account","secondAccount","publicKey","toString","accountDetailOne","airDrop","requestAirdrop","console","log","confirmedTransaction","getConfirmedTransaction","accountDetailTwo","secretKey","display","height","width","margin","target","length"],"mappings":"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","sourcesContent":["import { Explanation, ExplanationText, Title } from \"../Components/Explanation\";\nimport { BrowserRouter as Router, useHistory, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Connection, PublicKey } from \"@solana/web3.js\";\n\nimport fetchAllAcountInfo from \"../utils/fetchAllAccountInfo\";\nimport AccountCard from \"../Components/AccountCard\";\nimport Github from \"../Components/Github\";\nimport { Row, Col, Container } from \"react-grid-system\";\n\nconst SendTransaction = ({ accountList, connection }) => {\n  const [transaction, setTransactions] = useState(false);\n  const [goToNextPage, setNextPage] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const [value, setValue] = useState(\"\");\n\n  const sendTransactions = async (e) => {\n    setLoading(true);\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    const getNewAccount = async () => {\n      const account = await new PublicKey(\n        \"DoFxSedewimW1j8wz1LDhNUsqWs97aytqXkhFj8WBz8H\",\n      );\n\n      if (connection) {\n        setLoading(true);\n\n        const secondAccount = await new PublicKey(\n          accountList?.[0]?.publicKey.toString(),\n        );\n\n        const accountDetailOne = await fetchAllAcountInfo(\n          accountList?.[0]?.publicKey || null,\n          connection,\n        );\n\n        const airDrop = await connection.requestAirdrop(\n          secondAccount,\n          10000000,\n        );\n\n        console.log(airDrop, \"air drop\");\n\n        const confirmedTransaction = connection.getConfirmedTransaction(\n          airDrop,\n        );\n        const accountDetailTwo = await fetchAllAcountInfo(account, connection);\n\n        setTransactions([\n          { ...accountDetailOne, secretKey: accountList?.[0]?.secretKey },\n          accountDetailTwo,\n        ]);\n        setLoading(false);\n      }\n    };\n\n    getNewAccount();\n  }, [connection]);\n\n  return (\n    <Container className=\"wrapper\">\n      <Explanation>\n        <Title>Let's try sending a transaction now!</Title>\n        <ExplanationText>\n          Some money has been airdropped into your account! Being able to send\n          and receive a transaction is really important. To do this, you need\n          the reciever wallet, and the send wallet. This page has two generated\n          accounts. If you want to check the transaction, you can see a list of\n          all transactions here:\n        </ExplanationText>\n      </Explanation>\n\n      <Row>\n        <Col xs={5}>\n          <AccountCard account={transaction[0]} />\n        </Col>\n        <Col xs={2}>\n          <div\n            style={{\n              display: \"flex\",\n              height: \"100%\",\n            }}\n          >\n            <img\n              style={{\n                width: \"50%\",\n                margin: \"auto\",\n              }}\n              src=\"Arrow_east.svg\"\n            />\n          </div>\n        </Col>\n        <Col xs={5}>\n          <AccountCard account={transaction[1]} />\n        </Col>\n      </Row>\n\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n        }}\n      >\n        <input\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n        ></input>\n        <button onClick={sendTransactions}>Send coins to new account</button>\n      </div>\n\n      {/* \n      <div>\n        As you can see there is a transaction fee associated with your\n        transaction.\n      </div> */}\n      <Link to={`/success`} className={!accountList.length ? \"disabled\" : null}>\n        Finish\n      </Link>\n\n      <Github />\n    </Container>\n  );\n};\n\nexport default SendTransaction;\n"]},"metadata":{},"sourceType":"module"}